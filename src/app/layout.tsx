import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import '../styles/globals.css';
import Navigation from '@/components/Navigation';
import { Providers } from './provider';
import { ToastProvider } from './ToastProvider';
import { ReduxProvider } from './ReduxProvider';
import { getServerSession } from 'next-auth';
import { authOptions } from '@/utils/authOptions';
import { StoreState } from '@/store/store';
import { AppProvider } from './AppProvider';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await getServerSession(authOptions);
  const preloadedState: StoreState = {
    user: {
      userId: session?.user?.id || null,
      name: session?.user?.name || null,
      email: session?.user?.email || null,
      avartar: session?.user?.avartar || null,
    },
  };

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} h-full w-full antialiased`}
      >
        <AppProvider>
          <ReduxProvider preloadedState={preloadedState}>
            <Providers>
              {/* Header */}
              <Navigation />
              {/* Main */}
              <ToastProvider>
                <main className="h-full w-full pt-[64px]">{children}</main>
              </ToastProvider>
            </Providers>
          </ReduxProvider>
        </AppProvider>
      </body>
    </html>
  );
}
